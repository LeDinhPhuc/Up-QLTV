/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlythuvien;

/**
 *
 * @author Đình Phúc
 */
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.util.NumberToTextConverter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xwpf.usermodel.IBodyElement;
import org.apache.poi.xwpf.usermodel.TableRowAlign;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFRun;

public class QuanLySach extends javax.swing.JFrame {

    private DefaultTableModel model;
    private MyConnect myConnect = new MyConnect();
    private Connection conn = myConnect.connect();
    private PreparedStatement ps = null;
    private int rowID = 0;
    private boolean fileOut = true;     //Cờ xuất file

    public QuanLySach() {
        initComponents();
        model = (DefaultTableModel) Table1.getModel();
        showTable(getListSach());    // hiển thị sách trong database
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton10 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        XoaHang = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane16 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        tenTG = new javax.swing.JTextField();
        tenSach = new javax.swing.JTextField();
        giaTien = new javax.swing.JTextField();
        tongSoLuong = new javax.swing.JTextField();
        maSach = new javax.swing.JTextField();
        nXB = new javax.swing.JTextField();
        theLoai = new javax.swing.JTextField();
        namXB = new javax.swing.JTextField();
        soLuongCon = new javax.swing.JTextField();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comboTimKiem = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        timKiem = new javax.swing.JTextField();
        nhap = new javax.swing.JButton();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        xoa = new javax.swing.JButton();
        them = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        seeAll = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        xuatSach = new javax.swing.JButton();
        AddToDB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        TKTenSach = new javax.swing.JButton();
        TKTheLoai = new javax.swing.JButton();
        TKNXB = new javax.swing.JButton();
        thongKeSach = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        xuatTKe = new javax.swing.JButton();

        jButton10.setText("jButton10");

        jMenuItem1.setText("jMenuItem1");

        XoaHang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        XoaHang.setText("Xóa Hàng");
        XoaHang.setToolTipText("");
        XoaHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaHangActionPerformed(evt);
            }
        });
        jPopupMenu1.add(XoaHang);

        setTitle("LÊ ĐÌNH PHÚC _ 20163184 _ Quản Lý Sách");

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jDesktopPane1.setBackground(new java.awt.Color(3, 48, 80));
        jDesktopPane1.setForeground(new java.awt.Color(255, 255, 255));

        Table1.setAutoCreateRowSorter(true);
        Table1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "       Mã Sách", "     Tên Sách", "       Tên Tác Giả", "       Nhà Xuất Bản", "       Năm Xuất Bản", "       Giá Tiền", "    Thể Loại", "    Số Lượng Còn", "   Tổng Số Lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table1.setComponentPopupMenu(jPopupMenu1);
        Table1.setRowHeight(24);
        Table1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Table1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table1MouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(Table1);

        tenTG.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tenTG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenTGActionPerformed(evt);
            }
        });

        tenSach.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        giaTien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        tongSoLuong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        maSach.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        maSach.setToolTipText("Sxxx ( Ví dụ S001)");

        nXB.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        theLoai.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        namXB.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        namXB.setToolTipText("YYYY-MM-DD");

        soLuongCon.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLayeredPane1.setLayer(tenTG, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tenSach, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(giaTien, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tongSoLuong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(maSach, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(nXB, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(theLoai, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(namXB, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(soLuongCon, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(nXB, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tenTG, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maSach, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenSach, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soLuongCon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(theLoai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(giaTien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namXB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tongSoLuong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maSach, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(tenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(tenTG, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(nXB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(namXB, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(giaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(theLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(soLuongCon, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(tongSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tên Tác Giả");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tổng Số Lượng");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nhà Xuất Bản");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Thể Loại");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Giá Tiền");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Năm Xuất Bản");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Số Lượng Còn");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tên Sách");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã Sách");

        jLayeredPane2.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6))
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addComponent(jLabel2)
                .addGap(56, 56, 56)
                .addComponent(jLabel3)
                .addGap(43, 43, 43)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jLabel5)
                .addGap(55, 55, 55)
                .addComponent(jLabel6)
                .addGap(57, 57, 57)
                .addComponent(jLabel7)
                .addGap(57, 57, 57)
                .addComponent(jLabel10)
                .addGap(58, 58, 58)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        comboTimKiem.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        comboTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm Kiếm Theo Mã Sách", "Tìm Kiếm Theo Tên Sách", "Tìm Kiếm Theo Thể Loại", "Tìm Kiếm Theo Tên Tác Giả", "Tìm Kiếm Theo Nhà Xuất Bản" }));
        comboTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboTimKiemMouseClicked(evt);
            }
        });
        comboTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTimKiemActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Tìm Kiếm: ");

        timKiem.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemActionPerformed(evt);
            }
        });

        nhap.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        nhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/if_import-download-save_2931171.png"))); // NOI18N
        nhap.setText("Nhập File");
        nhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhapActionPerformed(evt);
            }
        });

        xoa.setBackground(new java.awt.Color(255, 0, 52));
        xoa.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/remove.png"))); // NOI18N
        xoa.setText("Xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });

        them.setBackground(new java.awt.Color(204, 255, 204));
        them.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/ínert.png"))); // NOI18N
        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        sua.setBackground(new java.awt.Color(255, 255, 56));
        sua.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/sửa.png"))); // NOI18N
        sua.setText("Sửa");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });

        jLayeredPane3.setLayer(xoa, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(them, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(sua, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(them)
                .addGap(51, 51, 51)
                .addComponent(sua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jLayeredPane3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {sua, them});

        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sua, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLayeredPane3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {sua, them, xoa});

        seeAll.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        seeAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/see.png"))); // NOI18N
        seeAll.setText("Hiện Thị Tất Cả");
        seeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeAllActionPerformed(evt);
            }
        });

        xuatSach.setBackground(new java.awt.Color(13, 255, 0));
        xuatSach.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        xuatSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/if_output-1_2916359.png"))); // NOI18N
        xuatSach.setText("Xuất File");
        xuatSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuatSachActionPerformed(evt);
            }
        });

        jLayeredPane4.setLayer(xuatSach, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(xuatSach))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xuatSach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        AddToDB.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AddToDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/add dâtbase.png"))); // NOI18N
        AddToDB.setText("Thêm Vào CSDL");
        AddToDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToDBActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jScrollPane16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLayeredPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboTimKiem, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(timKiem, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(nhap, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(seeAll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLayeredPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(AddToDB, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jLayeredPane3)
                                .addGap(18, 18, 18))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                        .addComponent(comboTimKiem, 0, 0, Short.MAX_VALUE)
                                        .addGap(42, 42, 42)
                                        .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 1211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(nhap)
                        .addGap(173, 173, 173)
                        .addComponent(AddToDB)
                        .addGap(115, 115, 115)
                        .addComponent(seeAll)
                        .addGap(168, 168, 168))))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane16))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seeAll, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nhap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddToDB, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(comboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLayeredPane4))
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Cập Nhật Sách & Tìm Kiếm", jDesktopPane1);

        jDesktopPane4.setBackground(new java.awt.Color(3, 48, 80));

        TKTenSach.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        TKTenSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/statistic.png"))); // NOI18N
        TKTenSach.setText("Theo Tên Sách");
        TKTenSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TKTenSachActionPerformed(evt);
            }
        });

        TKTheLoai.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        TKTheLoai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/statistic.png"))); // NOI18N
        TKTheLoai.setText("Theo Thể Loại");
        TKTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TKTheLoaiActionPerformed(evt);
            }
        });

        TKNXB.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        TKNXB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/statistic.png"))); // NOI18N
        TKNXB.setText("Theo Nhà Xuất Bản");
        TKNXB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TKNXBActionPerformed(evt);
            }
        });

        thongKeSach.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        thongKeSach.setForeground(new java.awt.Color(255, 255, 255));
        thongKeSach.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        thongKeSach.setText("Thống Kê Sách ");

        Table2.setAutoCreateRowSorter(true);
        Table2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Table2.setRowHeight(26);
        jScrollPane1.setViewportView(Table2);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("GVHD: ThS LÊ THỊ HOA");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Thống Kê Sách:");

        xuatTKe.setBackground(new java.awt.Color(13, 255, 0));
        xuatTKe.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        xuatTKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlythuvien/icon/if_output-1_2916359.png"))); // NOI18N
        xuatTKe.setText("Xuất File");
        xuatTKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuatTKeActionPerformed(evt);
            }
        });

        jDesktopPane4.setLayer(TKTenSach, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(TKTheLoai, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(TKNXB, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(thongKeSach, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(xuatTKe, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                .addComponent(TKTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(xuatTKe))
                            .addComponent(TKTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TKNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                            .addComponent(thongKeSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1072, Short.MAX_VALUE))
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addComponent(thongKeSach, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TKTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TKTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xuatTKe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(TKNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 423, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
        );

        jDesktopPane4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {TKNXB, TKTheLoai});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane4)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane4)
        );

        jTabbedPane1.addTab("Thống Kê", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tenTGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenTGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenTGActionPerformed

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn thay xóa sách không ?",
                "Quản Lý Sách _ Xóa", JOptionPane.YES_NO_OPTION);
        if (choose == 0) {
            boolean flag = remove();
            if (flag) {
                clearData();
                //  Xóa dòng tại vị trí rowID lấy từ action mouse click
                model.removeRow(rowID);
            }
        } else {
            clearData();
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
        int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn thay đổi dữ liệu không ?",
                "Quản Lý Sách _ Sửa", JOptionPane.YES_NO_OPTION);
        if (choose == 0) {
            boolean flag = update();
            if (flag) {
                clearData();
            }
        }
    }//GEN-LAST:event_suaActionPerformed

    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        Sach s = new Sach();
        s.setMaSach(maSach.getText());
        s.setTenSach(tenSach.getText());
        s.setTenTG(tenTG.getText());
        s.setNXB(nXB.getText());
        s.setNamXB(namXB.getText());
        s.setGiaTien(Integer.parseInt(giaTien.getText()));
        s.setTheLoai(theLoai.getText());
        s.setSoLuongCon(Integer.parseInt(soLuongCon.getText()));
        s.setTongSoLuong(Integer.parseInt(tongSoLuong.getText()));
        boolean flag = addSach(s);                          //Nếu thêm sách thành công
        if (flag) {
            model.addRow(new Object[]{
                s.getMaSach(), s.getTenSach(), s.getTenTG(), s.getNXB(), s.getNamXB(),
                s.getGiaTien(), s.getTheLoai(), s.getSoLuongCon(), s.getTongSoLuong()
            });
            clearData();
        }
    }//GEN-LAST:event_themActionPerformed

    private void Table1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Table1AncestorAdded

    }//GEN-LAST:event_Table1AncestorAdded

    private void TKTenSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TKTenSachActionPerformed
        ArrayList<Sach> sach = new ArrayList<Sach>();
        int i = 0;
        thongKeSach.setText("Thống Kê Sách Theo Tên Sách");
        DefaultTableModel modelTK = (DefaultTableModel) Table2.getModel();
        modelTK.setColumnIdentifiers(new Object[]{
            "    STT", "      Tên Sách", "     Số Lượng Còn ", "  Tổng Số Lượng"
        });
        sach = tKeTheoTenSach();
        removeAllRowTKe();
        for (Sach s : sach) {
            modelTK.addRow(new Object[]{
                ++i, s.getTenSach(), s.getSoLuongCon(), s.getTongSoLuong()
            });
        }
    }//GEN-LAST:event_TKTenSachActionPerformed

    private void TKTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TKTheLoaiActionPerformed
        ArrayList<Sach> sach = new ArrayList<Sach>();
        int i = 0;
        thongKeSach.setText("Thống Kê Sách Theo Thể Loại");
        DefaultTableModel modelTK = (DefaultTableModel) Table2.getModel();
        modelTK.setColumnIdentifiers(new Object[]{
            "     STT", "     Thể Loại", "    Số Lượng Còn", " Tổng Số Lượng"
        });
        sach = tKeTheoTheLoai();
        removeAllRowTKe();
        for (Sach s : sach) {
            modelTK.addRow(new Object[]{
                ++i, s.getTheLoai(), s.getSoLuongCon(), s.getTongSoLuong()
            });
        }
    }//GEN-LAST:event_TKTheLoaiActionPerformed

    private void TKNXBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TKNXBActionPerformed
        ArrayList<Sach> sach = new ArrayList<Sach>();
        int i = 0;
        thongKeSach.setText("Thống Kê Sách Theo Nhà Xuất Bản");
        DefaultTableModel modelTK = (DefaultTableModel) Table2.getModel();
        modelTK.setColumnIdentifiers(new Object[]{
            "      STT", "   Nhà Xuất Bản", "    Số Lượng Còn", "  Tổng Sô Lượng"
        });
        sach = tKeTheoNXB();
        removeAllRowTKe();
        for (Sach s : sach) {
            modelTK.addRow(new Object[]{
                ++i, s.getTheLoai(), s.getSoLuongCon(), s.getTongSoLuong()
            });
        }

    }//GEN-LAST:event_TKNXBActionPerformed

    private void comboTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTimKiemActionPerformed
        fileOut = false;    //Cờ xuất file
        ArrayList<Sach> sach = new ArrayList<Sach>();
        Object obj = evt.getSource();
        if (obj == comboTimKiem) {
            int index = comboTimKiem.getSelectedIndex();
            switch (index) {
                case 0:
                    sach = tKTheoMaSach();
                    break;
                case 1:
                    sach = tKTheoTenSach();
                    break;
                case 2:
                    sach = tKTheoTheLoai();
                    break;
                case 3:
                    sach = tKTheoTenTG();
                    break;
                case 4:
                    sach = tKTheoNXB();
                    break;
            }
            removeAllRow();
            showTable(sach);
        }
    }//GEN-LAST:event_comboTimKiemActionPerformed

    private void Table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table1MouseClicked
        rowID = Table1.getSelectedRow();
        maSach.setText(Table1.getValueAt(rowID, 0).toString());
        tenSach.setText(Table1.getValueAt(rowID, 1).toString());
        tenTG.setText(Table1.getValueAt(rowID, 2).toString());
        nXB.setText(Table1.getValueAt(rowID, 3).toString());
        namXB.setText(Table1.getValueAt(rowID, 4).toString());
        giaTien.setText(Table1.getValueAt(rowID, 5).toString());
        theLoai.setText(Table1.getValueAt(rowID, 6).toString());
        soLuongCon.setText(Table1.getValueAt(rowID, 7).toString());
        tongSoLuong.setText(Table1.getValueAt(rowID, 8).toString());
    }//GEN-LAST:event_Table1MouseClicked

    private void addRowData2(XWPFTable table, int lastRowPosition) {
        for (int i = lastRowPosition - 1; i < Table2.getRowCount(); i++) {
            XWPFTableRow newRow = table.createRow();
            for (int j = 0; j < table.getRow(i).getTableCells().size(); j++) {
                newRow.getCell(j).setText(Table2.getValueAt(i, j).toString());
            }
        }
    }

    private void xuatSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuatSachActionPerformed
        String f0 = System.getProperty("user.home");
        String f1 = "\\Documents\\NetBeansProjects\\Quanlythuvien\\Quản Lý Sách\\";
        String f2 = null;
        if (fileOut == true) {
            f2 = "Thông Tin Sách.docx";
        } else {
            if (comboTimKiem.getSelectedItem().equals("Tìm Kiếm Theo Mã Sách")) {
                f2 = "Tìm Kiếm Sách Theo Mã Sách.docx";
            } else if (comboTimKiem.getSelectedItem().equals("Tìm Kiếm Theo Tên Sách")) {
                f2 = "Tìm Kiếm Sách Theo Tên Sách.docx";
            } else if (comboTimKiem.getSelectedItem().equals("Tìm Kiếm Theo Thể Loại")) {
                f2 = "Tìm Kiếm Sách Theo Thể Loại.docx";
            } else if (comboTimKiem.getSelectedItem().equals("Tìm Kiếm Theo Tên Tác Giả")) {
                f2 = "Tìm Kiếm Sách Theo Tên Tác Giả.docx";
            } else {
                f2 = "Tìm Kiếm Sách Theo Nhà Xuất Bản.docx";
            }
        }
        String fileName = f0 + f1 + f2;

        try {
            InputStream file = new FileInputStream(fileName);
            XWPFDocument hdoc = new XWPFDocument(OPCPackage.open(file));
            Iterator bodyElementIterator = hdoc.getBodyElementsIterator();
            for (XWPFParagraph p : hdoc.getParagraphs()) {
                List<XWPFRun> runs = p.getRuns();
                if (runs != null) {
                    for (XWPFRun r : runs) {
                        r.setFontSize(12);
                        r.setFontFamily("Times New Roman");
                        String text = r.getText(0);
                        if (text != null && text.contains("ngayxxx")) {
                            SimpleDateFormat day = new SimpleDateFormat("dd");
                            SimpleDateFormat month = new SimpleDateFormat("MM");
                            SimpleDateFormat year = new SimpleDateFormat("yyyy");
                            Date date = new Date();
                            String ngay = day.format(date);
                            String thang = month.format(date);
                            String nam = year.format(date);
                            text = text.replace("ngayxxx", "Ngày  " + ngay + "  tháng  " + thang + "  năm  " + nam);
                            r.setText(text, 0);
                            break;
                        }
                    }
                }
            }
            while (bodyElementIterator.hasNext()) {
                IBodyElement element = (IBodyElement) bodyElementIterator.next();
                if ("TABLE".equalsIgnoreCase(element.getElementType().name())) {
                    //Danh sách tất cả Table trong file word
                    List<XWPFTable> tableList = element.getBody().getTables();
                    //Duyệt qua danh sách tất cả các table
                    for (XWPFTable table : tableList) {
                        //Căn bảng ở giữa file
                        table.setTableAlignment(TableRowAlign.CENTER);
                        //  Xóa các dòng thừa trước khi thêm mới
                        while (table.getRow(1) != null) {
                            table.removeRow(1);
                        }
                        //Thêm các dòng từ jTable vào table trong word
                        for (int i = 1; i <= Table1.getRowCount(); i++) {
                            XWPFTableRow newRow = table.createRow();
                            for (int j = 0; j < table.getRow(i).getTableCells().size(); j++) {
                                newRow.getCell(j).setText(Table1.getValueAt(i - 1, j).toString());
                            }
                        }
                    }
                }
            }
            OutputStream out = new FileOutputStream(f2);
            hdoc.write(out);
            out.close();
        } catch (IOException | InvalidFormatException ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Mở file
        try {
            File myFile = new File(f0 + "\\Documents\\NetBeansProjects\\Quanlythuvien\\" + f2);
            Desktop.getDesktop().open(myFile);
        } catch (IOException ex) {
            // no application registered for PDFs
            ex.printStackTrace();
        }
    }//GEN-LAST:event_xuatSachActionPerformed

    private void timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timKiemActionPerformed

    private void nhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhapActionPerformed
        // TODO add your handling code here:
        // đường dẫn
        String path = null;
        JFileChooser fileChooser = new JFileChooser();
        // show ra một bảng chọn file
        int rVal = fileChooser.showOpenDialog(null);
        // nếu nhấn nút ok (tuỳ chọn APPROVE_OPTION)
        if (rVal == JFileChooser.APPROVE_OPTION) {
             String fileName = fileChooser.getSelectedFile().getName();
            String dir = fileChooser.getCurrentDirectory().toString();
            path = dir + "\\" + fileName;
        } // nếu nhấn nút cancel trong bảng 
        else if (rVal == JFileChooser.CANCEL_OPTION) {
            return;
        }
        // chỗ này sẽ delete hết các dòng trước khi nhập dữ liệu từ file 
        removeAllRow();
        // vector lưu tên cột
        Vector columns = new Vector();
        try {
            FileInputStream file = new FileInputStream(new File(path));
            // tạo một file excel
            XSSFWorkbook workbook = new XSSFWorkbook(file);
            // tạo một sheet trong excel có số thứ tự là 0
            XSSFSheet sheet = workbook.getSheetAt(0);
            // con trỏ duyệt hàng trong excel 
            Iterator<Row> rowIt = sheet.iterator();
            // nếu vẫn còn dòng trong file
            while (rowIt.hasNext()) {
                // tạo một dòng mới 
                Row row = rowIt.next();
                // con trỏ trỏ vào các ô trong một dòng 
                Iterator<Cell> cellIt = row.cellIterator();
                // nếu là hàng 0 
                if (row.getRowNum() != 0) {
                    //vector chứa dữ liệu trong 1 dòng để add vào bảng jtabel
                    Vector<String> rowData = new Vector<String>();
                    // nếu vẫn còn ô tiếp theo
                    while (cellIt.hasNext()) {
                        // lấy cell trong bảng excel
                        Cell cell = cellIt.next();
                        // nếu cell có kiểu dữ liệu là string
                        // if(cell("type",	D1)){

                        // }
                        if (cell.getCellType() == CellType.STRING) {
                            rowData.add(cell.getStringCellValue().toString());
                        } // nếu cell có kiểu dữ liệu là số thì chuyển thành xâu.
                        else if (DateUtil.isCellDateFormatted(cell)) {
                            // Format Date
                            String pattern = "yyyy-MM-dd";
                            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
                            // Format cell.getDateCellValue()
                            String date = simpleDateFormat.format(cell.getDateCellValue());
                            rowData.add(date);
                        } else if (cell.getCellType() == CellType.NUMERIC) {
                            rowData.add(NumberToTextConverter.toText(cell.getNumericCellValue()));
                        }
                    }
                    // add dữ liệu vào trong bảng jtable 
                    model.addRow(rowData);

                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(QuanLySach.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(QuanLySach.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nhapActionPerformed

    private void comboTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboTimKiemMouseClicked

    }//GEN-LAST:event_comboTimKiemMouseClicked

    private void seeAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeAllActionPerformed
        fileOut = true;
        removeAllRow();
        clearData();
        showTable(getListSach());

    }//GEN-LAST:event_seeAllActionPerformed

    private void AddToDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToDBActionPerformed
//      System.out.println(Table1.getRowCount());
        Sach s = new Sach();
        int n = Table1.getRowCount();
        String sql = "INSERT INTO `quanlythuvien`.`sach` (`MaSach_LDP`, `TenSach_LDP`, `TenTG_LDP`, `NXB_LDP`,"
                + " `NamXB_LDP`, `GiaTien_LDP`, `TheLoai_LDP`, `SoLuongCon_LDP`, `TongSoLuong_LDP`)"
                + "VALUES (?,?,?,?,?,?,?,?,?);";
        for (int index = 0; index < n; index++) {
            s.setMaSach(Table1.getValueAt(index, 0).toString());
            s.setTenSach(Table1.getValueAt(index, 1).toString());
            s.setTenTG(Table1.getValueAt(index, 2).toString());
            s.setNXB(Table1.getValueAt(index, 3).toString());
            s.setNamXB(Table1.getValueAt(index, 4).toString());
            s.setGiaTien(Integer.parseInt(Table1.getValueAt(index, 5).toString()));
            s.setTheLoai(Table1.getValueAt(index, 6).toString());
            s.setSoLuongCon(Integer.parseInt(Table1.getValueAt(index, 7).toString()));
            s.setTongSoLuong(Integer.parseInt(Table1.getValueAt(index, 8).toString()));
            try {
                ps = conn.prepareStatement(sql);
                ps.setString(1, s.getMaSach());
                ps.setString(2, s.getTenSach());
                ps.setString(3, s.getTenTG());
                ps.setString(4, s.getNXB());
                ps.setString(5, s.getNamXB());
                ps.setInt(6, s.getGiaTien());
                ps.setString(7, s.getTheLoai());
                ps.setInt(8, s.getSoLuongCon());
                ps.setInt(9, s.getTongSoLuong());
                int kt = ps.executeUpdate();
                if (kt != 0) {
                    // Dòng bắt đầu đếm từ 0 nhưng cột lại bắt đàu đếm từ 1
                    model.removeRow(index);
                    n--;
                    index--;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error ! " + ex.getMessage()
                        + " \". Hãy sửa trực tiếp trên bảng và ấn \"Thêm vào CSDL\" để tiếp tục thêm.");
            }
        }
    }//GEN-LAST:event_AddToDBActionPerformed

    private void XoaHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaHangActionPerformed
        model.removeRow(rowID);
    }//GEN-LAST:event_XoaHangActionPerformed
    private static void removeParagraphs(XWPFTableCell tableCell) {
        int count = tableCell.getParagraphs().size();
        for (int i = 0; i < count; i++) {
            tableCell.removeParagraph(i);
        }
    }
    private void xuatTKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuatTKeActionPerformed
        String f0 = System.getProperty("user.home");
        String f1 = "\\Documents\\NetBeansProjects\\Quanlythuvien\\Quản Lý Sách\\";
        String f2 = null;
        if (thongKeSach.getText().equals("Thống Kê Sách Theo Tên Sách")) {
            f2 = "Thống Kê Sách Theo Tên Sách.docx";
        } else if (thongKeSach.getText().equals("Thống Kê Sách Theo Thể Loại")) {
            f2 = "Thống Kê Sách Theo Thể Loại.docx";
        } else if (thongKeSach.getText().equals("Thống Kê Sách Theo Nhà Xuất Bản")) {
            f2 = "Thống Kê Sách Theo NXB.docx";
        }
        String fileName = f0 + f1 + f2;

        try {
            InputStream file = new FileInputStream(fileName);
            XWPFDocument docx = new XWPFDocument(OPCPackage.open(file));
            Iterator bodyElementIterator = docx.getBodyElementsIterator();
            for (XWPFParagraph p : docx.getParagraphs()) {
                List<XWPFRun> runs = p.getRuns();
                if (runs != null) {
                    for (XWPFRun r : runs) {
                        r.setFontSize(12);
                        r.setFontFamily("Times New Roman");
                        String text = r.getText(0);
                        if (text != null && text.contains("ngayxxx")) {
                            SimpleDateFormat day = new SimpleDateFormat("dd");
                            SimpleDateFormat month = new SimpleDateFormat("MM");
                            SimpleDateFormat year = new SimpleDateFormat("yyyy");
                            Date date = new Date();
                            String ngay = day.format(date);
                            String thang = month.format(date);
                            String nam = year.format(date);
                            text = text.replace("ngayxxx", "Ngày  " + ngay + "  tháng  " + thang + "  năm  " + nam);
                            r.setText(text, 0);
                            break;
                        }
                    }
                }
            }
            while (bodyElementIterator.hasNext()) {
                IBodyElement element = (IBodyElement) bodyElementIterator.next();
                if ("TABLE".equalsIgnoreCase(element.getElementType().name())) {
                    //Danh sách tất cả Table trong file word
                    List<XWPFTable> tableList = element.getBody().getTables();

                    //Duyệt qua danh sách tất cả các table
                    for (XWPFTable table : tableList) {
                        //Căn bảng ở giữa file
                        table.setTableAlignment(TableRowAlign.CENTER);
                        //  Xóa các dòng thừa trước khi thêm mới
                        while (table.getRow(1) != null) {
                            table.removeRow(1);
                        }
                        //Thêm các dòng từ jTable vào table trong word
                        for (int i = 1; i <= Table2.getRowCount(); i++) {
                            XWPFTableRow newRow = table.createRow();
                            for (int j = 0; j < table.getRow(i).getTableCells().size(); j++) {
                                newRow.getCell(j).setText(Table2.getValueAt(i - 1, j).toString());
                            }
                        }
                    }
                }
            }
            OutputStream out = new FileOutputStream(f2);
            docx.write(out);
            out.close();
        } catch (IOException | InvalidFormatException ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Mở file
        try {
            File myFile = new File(f0 + "\\Documents\\NetBeansProjects\\Quanlythuvien\\" + f2);
            Desktop.getDesktop().open(myFile);
        } catch (IOException ex) {
            // no application registered for PDFs
            ex.printStackTrace();
        }
    }//GEN-LAST:event_xuatTKeActionPerformed
    /*------------------------------------- Init() -----------------------------------*/
    public ArrayList<Sach> getListSach() {          //Đọc dữ liệu trong database
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT * FROM sach";

        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setMaSach(rs.getString("MaSach_LDP"));
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setTenTG(rs.getString("TenTG_LDP"));
                s.setNXB(rs.getString("NXB_LDP"));
                s.setNamXB(rs.getString("NamXB_LDP"));
                s.setGiaTien(rs.getInt("GiaTien_LDP"));
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("SoLuongCon_LDP"));
                s.setTongSoLuong(rs.getInt("TongSoLuong_LDP"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    public void showTable(ArrayList<Sach> sach) {
        for (Sach s : sach) {
            model.addRow(new Object[]{
                s.getMaSach(), s.getTenSach(), s.getTenTG(), s.getNXB(), s.getNamXB(),
                s.getGiaTien(), s.getTheLoai(), s.getSoLuongCon(), s.getTongSoLuong()
            });
        }
    }

    public void removeAllRow() {
        DefaultTableModel modelDelete = (DefaultTableModel) Table1.getModel();
        modelDelete.setRowCount(0);
        if (modelDelete.getRowCount() != 0) {
            modelDelete.setRowCount(0);
        }
    }


    /*--------------------------------------------- Chức Năng Cập Nhật ----------------------------------------*/
    public void clearData() {
        maSach.setText("");
        tenSach.setText("");
        tenSach.setText("");
        tenTG.setText("");
        nXB.setText("");
        namXB.setText("");
        giaTien.setText("");
        theLoai.setText("");
        soLuongCon.setText("");
        tongSoLuong.setText("");
    }

    public boolean addSach(Sach s) {               //Thêm sách vào database
        String sql = "INSERT INTO `quanlythuvien`.`sach` (`MaSach_LDP`, `TenSach_LDP`, `TenTG_LDP`, `NXB_LDP`,"
                + " `NamXB_LDP`, `GiaTien_LDP`, `TheLoai_LDP`, `SoLuongCon_LDP`, `TongSoLuong_LDP`)"
                + "VALUES (?,?,?,?,?,?,?,?,?);";
        try {
            ps = conn.prepareStatement(sql);
            ps.setString(1, s.getMaSach());
            ps.setString(2, s.getTenSach());
            ps.setString(3, s.getTenTG());
            ps.setString(4, s.getNXB());
            ps.setString(5, s.getNamXB());
            ps.setInt(6, s.getGiaTien());
            ps.setString(7, s.getTheLoai());
            ps.setInt(8, s.getSoLuongCon());
            ps.setInt(9, s.getTongSoLuong());

            int kt = ps.executeUpdate();
            if (kt != 0) {
                JOptionPane.showMessageDialog(null, "Bạn đã thêm dữ liệu thành công !");
                return true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return false;
    }

    public boolean update() {
        String sql = "UPDATE `quanlythuvien`.`sach` SET "
                + "`MaSach_LDP` = ?, `TenSach_LDP` = ?, "
                + "`TenTG_LDP` = ?, `NXB_LDP` = ?,"
                + "`NamXB_LDP` = ?, `GiaTien_LDP` = ?,"
                + " `TheLoai_LDP` = ?, `SoLuongCon_LDP` = ?,"
                + " `TongSoLuong_LDP` = ? "
                + "WHERE (`MaSach_LDP` = ?);";
        try {
            ps = conn.prepareStatement(sql);
            ps.setString(1, maSach.getText());
            ps.setString(2, tenSach.getText());
            ps.setString(3, tenTG.getText());
            ps.setString(4, nXB.getText());
            ps.setString(5, namXB.getText());
            ps.setInt(6, Integer.parseInt(giaTien.getText()));
            ps.setString(7, theLoai.getText());
            ps.setInt(8, Integer.parseInt(soLuongCon.getText()));
            ps.setInt(9, Integer.parseInt(tongSoLuong.getText()));
            ps.setString(10, (Table1.getValueAt(Table1.getSelectedRow(), 0)).toString());

            int kt = ps.executeUpdate();
            if (kt != 0) {
                JOptionPane.showMessageDialog(null, "Bạn đã cập nhật dữ liệu thành công");
                //  Xóa dòng tại vị trí rowID lấy từ action mouse click
                model.removeRow(rowID);
                //  Thêm bản ghi vào bảng tại vị trí rowID lấy từ action mouse click
                model.insertRow(rowID, new Object[]{
                    maSach.getText(), tenSach.getText(), tenTG.getText(), nXB.getText(), namXB.getText(),
                    giaTien.getText(), theLoai.getText(), soLuongCon.getText(), tongSoLuong.getText()
                });
                clearData();
                return true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }

        return false;
    }

    public boolean remove() {                       //Xóa Sách khỏi database
        String sql = "DELETE FROM SACH WHERE MaSach_LDP = ?;";
        try {
            ps = conn.prepareStatement(sql);
            ps.setString(1, maSach.getText());
            int kt = ps.executeUpdate();
            if (kt != 0) {
                JOptionPane.showMessageDialog(null, "Bạn đã xóa dữ liệu thành công !");
                //  Xóa dòng tại vị trí rowID với rowID lấy từ action mouse click
                return true;
            }
        } catch (SQLException ex) {
//            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error => " + ex.getMessage());
        }
        return false;
    }

    /*------------------------------------------------- Tìm Kiếm ---------------------------------------------*/
    //Tìm kiếm sách theo mã sách
    public ArrayList<Sach> tKTheoMaSach() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT * FROM SACH WHERE (MaSach_LDP = '" + timKiem.getText() + "');";

        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setMaSach(rs.getString("MaSach_LDP"));
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setTenTG(rs.getString("TenTG_LDP"));
                s.setNXB(rs.getString("NXB_LDP"));
                s.setNamXB(rs.getString("NamXB_LDP"));
                s.setGiaTien(rs.getInt("GiaTien_LDP"));
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("SoLuongCon_LDP"));
                s.setTongSoLuong(rs.getInt("TongSoLuong_LDP"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    //Tìm kiếm sách theo tên sách
    public ArrayList<Sach> tKTheoTenSach() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT * FROM SACH"
                + " Where TenSach_LDP LIKE '%" + timKiem.getText() + "%';";

        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setMaSach(rs.getString("MaSach_LDP"));
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setTenTG(rs.getString("TenTG_LDP"));
                s.setNXB(rs.getString("NXB_LDP"));
                s.setNamXB(rs.getString("NamXB_LDP"));
                s.setGiaTien(rs.getInt("GiaTien_LDP"));
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("SoLuongCon_LDP"));
                s.setTongSoLuong(rs.getInt("TongSoLuong_LDP"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    //Tìm kiếm sách theo Thể loại
    public ArrayList<Sach> tKTheoTheLoai() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT * FROM SACH"
                + " Where TheLoai_LDP LIKE '%" + timKiem.getText() + "%';";

        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setMaSach(rs.getString("MaSach_LDP"));
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setTenTG(rs.getString("TenTG_LDP"));
                s.setNXB(rs.getString("NXB_LDP"));
                s.setNamXB(rs.getString("NamXB_LDP"));
                s.setGiaTien(rs.getInt("GiaTien_LDP"));
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("SoLuongCon_LDP"));
                s.setTongSoLuong(rs.getInt("TongSoLuong_LDP"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    //Tìm kiếm sách theo tên tác giả
    public ArrayList<Sach> tKTheoTenTG() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT * FROM SACH"
                + " Where TenTG_LDP LIKE '%" + timKiem.getText() + "%';";

        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setMaSach(rs.getString("MaSach_LDP"));
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setTenTG(rs.getString("TenTG_LDP"));
                s.setNXB(rs.getString("NXB_LDP"));
                s.setNamXB(rs.getString("NamXB_LDP"));
                s.setGiaTien(rs.getInt("GiaTien_LDP"));
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("SoLuongCon_LDP"));
                s.setTongSoLuong(rs.getInt("TongSoLuong_LDP"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    //Tìm kiếm sách theo Nhà Xuất Bản
    public ArrayList<Sach> tKTheoNXB() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT * FROM SACH"
                + " Where NXB_LDP LIKE '%" + timKiem.getText() + "%';";

        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setMaSach(rs.getString("MaSach_LDP"));
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setTenTG(rs.getString("TenTG_LDP"));
                s.setNXB(rs.getString("NXB_LDP"));
                s.setNamXB(rs.getString("NamXB_LDP"));
                s.setGiaTien(rs.getInt("GiaTien_LDP"));
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("SoLuongCon_LDP"));
                s.setTongSoLuong(rs.getInt("TongSoLuong_LDP"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }


    /*------------------------------------------------- Thống Kê ---------------------------------------------*/
    public void removeAllRowTKe() {
        DefaultTableModel modelDelete = (DefaultTableModel) Table2.getModel();
        modelDelete.setRowCount(0);
        if (modelDelete.getRowCount() != 0) {
            modelDelete.setRowCount(0);
        }
    }

    //Hàm thống kê Sách theo Tên Sách
    public ArrayList<Sach> tKeTheoTenSach() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "SELECT TenSach_LDP,Sum(SoLuongCon_LDP),Sum(TongSoLuong_LDP) "
                + "FROM SACH "
                + "Group By TenSach_LDP;";
        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setTenSach(rs.getString("TenSach_LDP"));
                s.setSoLuongCon(rs.getInt("Sum(SoLuongCon_LDP)"));
                s.setTongSoLuong(rs.getInt("Sum(TongSoLuong_LDP)"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    //Hàm thống kê sách theo Thể Loại
    public ArrayList<Sach> tKeTheoTheLoai() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "Select TheLoai_LDP,Sum(SoLuongCon_LDP),Sum(TongSoLuong_LDP) "
                + "from quanlythuvien.sach "
                + "group by TheLoai_LDP;";
        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setTheLoai(rs.getString("TheLoai_LDP"));
                s.setSoLuongCon(rs.getInt("Sum(SoLuongCon_LDP)"));
                s.setTongSoLuong(rs.getInt("Sum(TongSoLuong_LDP)"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    //Hàm thống kê sách theo Nhà Xuất Bản
    public ArrayList<Sach> tKeTheoNXB() {
        ArrayList<Sach> sach = new ArrayList<Sach>();
        String sql = "Select NXB_LDP,Sum(SoLuongCon_LDP),Sum(TongSoLuong_LDP) "
                + "from quanlythuvien.sach "
                + "group by NXB_LDP;";
        try {
            ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Sach s = new Sach();
                s.setTheLoai(rs.getString("NXB_LDP"));
                s.setSoLuongCon(rs.getInt("Sum(SoLuongCon_LDP)"));
                s.setTongSoLuong(rs.getInt("Sum(TongSoLuong_LDP)"));
                sach.add(s);    //thêm vào mảng
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
        return sach;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLySach s = new QuanLySach();
                s.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddToDB;
    private javax.swing.JButton TKNXB;
    private javax.swing.JButton TKTenSach;
    private javax.swing.JButton TKTheLoai;
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JMenuItem XoaHang;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> comboTimKiem;
    private javax.swing.JTextField giaTien;
    private javax.swing.JButton jButton10;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField maSach;
    private javax.swing.JTextField nXB;
    private javax.swing.JTextField namXB;
    private javax.swing.JButton nhap;
    private javax.swing.JButton seeAll;
    private javax.swing.JTextField soLuongCon;
    private javax.swing.JButton sua;
    private javax.swing.JTextField tenSach;
    private javax.swing.JTextField tenTG;
    private javax.swing.JTextField theLoai;
    private javax.swing.JButton them;
    private javax.swing.JLabel thongKeSach;
    private javax.swing.JTextField timKiem;
    private javax.swing.JTextField tongSoLuong;
    private javax.swing.JButton xoa;
    private javax.swing.JButton xuatSach;
    private javax.swing.JButton xuatTKe;
    // End of variables declaration//GEN-END:variables
}
